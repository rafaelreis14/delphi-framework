unit UI.Sistema.Login;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Framework.UI.FormBase, Vcl.StdCtrls, Vcl.Buttons,
  Vcl.ExtCtrls, Lib.Biblioteca, Data.DB, Vcl.DBCtrls, Vcl.Imaging.pngimage,
  UntErrorProvider, Biz.UsuarioLogado, RComboBox, Lib.Enumeradores, Lib.Parametro;

type
  TFrmLogin = class(TFrmBase)
    edLogin: TLabeledEdit;
    edSenha: TLabeledEdit;
    BtBtnOk: TBitBtn;
    BtBtnSair: TBitBtn;
    Panel1: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    lblServidorSocket: TLabel;
    Image1: TImage;
    cbFiliais: TRComboBox;
    cbModulos: TRComboBox;
    procedure edSenhaExit(Sender: TObject);
    procedure BtBtnOkClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure cbFiliaisExit(Sender: TObject);
  private
    //procedure ModulosUsuario(pLogin: string);
    { Private declarations }
  public
    { Public declarations }
  end;


var
  FrmLogin: TFrmLogin;

implementation

uses
  Datasnap.DBClient, Biz.Usuario, Biz.Filial, Biz.Modulo, UI.Sistema.TrocaSenha, Biz.FilialAcesso;

{$R *.dfm}

procedure TFrmLogin.edSenhaExit(Sender: TObject);
begin
    inherited;
    TUsuarioLogado.ObterInstancia.Autenticar(edLogin.Text, edSenha.Text);
    if TUsuarioLogado.ObterInstancia.Autenticado then
    begin
        TUsuarioLogado.ObterInstancia.CarregarFiliaisAcesso;
        cbFiliais.DataSource := TUsuarioLogado.ObterInstancia.FiliaisAcesso.ToList;
        cbFiliais.DataBind;
    end
    else
    begin
        cbModulos.Clear();
        edLogin.SetFocus;
    end;
end;

procedure TFrmLogin.BtBtnOkClick(Sender: TObject);
var
   validado : Boolean;
   Msg: string;
   ParametroFlgAlteracaoSenha: TParametro;
begin
    try
      inherited;
      validado := True;
      //
      if (edLogin.Text = '')  or (EdSenha.Text = '') or
         (cbFiliais.Value = '') or (cbModulos.value = '') then
      begin
          Validado := false;
      end;
      //
      if not(Validado) then
      begin
          TLib.MensagemInformacao('Todo os campos são obrigatórios.',Self.Caption);
          Abort;
      end;
      //
      cbModulos.GetObject<TModulo>.CopiarPara(TUsuarioLogado.ObterInstancia.ModuloLogado);
      //
      if (TUsuarioLogado.ObterInstancia.ObrigaTrocaSenha = 'S') or
      (TUsuarioLogado.ObterInstancia.SenhaExpirada = true) then
      begin
           Msg := 'A sua senha expirou, favor informar a nova senha.';
           if tlib.AbrirFormulario(TFrmTrocaSenha,TObject(Msg)) <> rfOK then
              Application.Terminate;
      end;
      //
      ModalResult := mrOk;
    finally

    end;
end;


procedure TFrmLogin.cbFiliaisExit(Sender: TObject);
begin
inherited;
    if cbFiliais.value <> '' then
    begin

        TUsuarioLogado.ObterInstancia.Filial.Obter(cbFiliais.GetObject<TFilialAcesso>.CodigoFilial);
        TUsuarioLogado.ObterInstancia.ObterModulosDeAcesso;
        cbModulos.Enabled := True;
        cbModulos.DataSource := TUsuarioLogado.ObterInstancia.ModulosAcesso.ToList;
        cbModulos.DataBind;
        cbModulos.SetFocus;
    end;
end;


//procedure TFrmLogin.FiliaisUsuario(pLogin : string);
//var
//    vParametro : Parametro;
//    Dataset : TClientDataSet;
//    vLocalFilial : LocalFilial;
//begin
//    inherited;
//    try
//        vParametro  := Parametro.Create;
//        vParametro.Add('S04','S04_S01_LOGIN',pLogin);
//        Dataset  := BaseLib.XmlToDataset(BaseLib.ExecutaTarefa('FiliaisUsuario',Self.Caption,vParametro));
//
//        CmbBxEmpresaFilial.Items.Clear;
//
//        Dataset.First;
//        while not (Dataset.Eof) do
//        begin
//            vLocalFilial             := LocalFilial.Create;
//            vLocalFilial.Empresa     := Dataset.FieldByName('S04_S12_EMP').AsString;
//            vLocalFilial.Nome        := Dataset.FieldByName('S12_NOME').AsString;
//            vLocalFilial.Codigo      := Dataset.FieldByName('S04_S13_FILIAL').AsString;
//            vLocalFilial.Descricao   := Dataset.FieldByName('S13_DESC').AsString;
//            vLocalFilial.RazaoSocial := Dataset.FieldByName('S13_RAZAOSOCIAL').AsString;
//            vLocalFilial.Endereco    := Dataset.FieldByName('S13_END').AsString;
//            vLocalFilial.Bairro      := Dataset.FieldByName('S13_BAIRRO').AsString;
//            vLocalFilial.Cidade      := Dataset.FieldByName('S13_CIDADE').AsString;
//            vLocalFilial.UF          := Dataset.FieldByName('S13_UF').AsString;
//            vLocalFilial.CEP         := Dataset.FieldByName('S13_CEP').AsString;
//            vLocalFilial.CNPJ        := Dataset.FieldByName('S13_CNPJ').AsString;
//            vLocalFilial.IE          := Dataset.FieldByName('S13_IE').AsString;
//            vLocalFilial.Fone        := Dataset.FieldByName('S13_FONE').AsString;
//            vLocalFilial.Fax         := Dataset.FieldByName('S13_FAX').AsString;
//            vLocalFilial.DtaAbertura := Dataset.FieldByName('S13_DTABERTURA').AsString;
//            vLocalFilial.Email       := Dataset.FieldByName('S13_EMAIL').AsString;
//            vLocalFilial.CD          := Dataset.FieldByName('S13_CD').AsString;
//
//            CmbBxEmpresaFilial.AddItem(vLocalFilial.Codigo+'-'+vLocalFilial.Nome+' / '+vLocalFilial.Descricao, vLocalFilial);
//            Dataset.Next;
//        end;
//    finally
//        FreeAndNil(vParametro);
//        FreeAndNil(Dataset);
//        //freeandnil(vLocalFilial);
//    end;
//end;

//procedure TFrmLogin.ModulosUsuario(pLogin : string);
//var
//    vParametro : Parametro;
//    Dataset : TClientDataSet;
//    vLocalFilial : LocalFilial;
//begin
//    inherited;
//    try
//        vLocalFilial := (CmbBxEmpresaFilial.Items.Objects[CmbBxEmpresaFilial.ItemIndex] as LocalFilial);
//
//        vParametro  := Parametro.Create;
//        vParametro.Add('','EMPRESA',vLocalFilial.Empresa);
//        vParametro.Add('','S03_S01_LOGIN',pLogin);
//        Dataset  := BaseLib.XmlToDataset(BaseLib.ExecutaTarefa('ListarModuloUsuario',Self.Caption,vParametro));
//
//        CmbBxModulo.Items.Clear;
//
//        Dataset.First;
//        while not (Dataset.Eof) do
//        begin
//            CmbBxModulo.Items.Add(Dataset.FieldByName('S09_S08_MODULO').AsString);
//            Dataset.Next;
//        end;
//    finally
//        //FreeAndNil(vLocalFilial);
//        FreeAndNil(vParametro);
//    end;
//end;

procedure TFrmLogin.FormDestroy(Sender: TObject);
var
  I: Integer;
begin
//    for I := 0 to CmbBxEmpresaFilial.Items.Count -1 do
//      CmbBxEmpresaFilial.Items.Objects[i].Free;
//
//    for I := 0 to CmbBxModulo.Items.Count -1 do
//      CmbBxModulo.Items.Objects[i].Free;
end;

procedure TFrmLogin.FormShow(Sender: TObject);
begin
    inherited;
//    lblServidorSocket.Caption :=  Tlib.IfTernario(UpperCase(DMCliente.HostName) = '',
//    DMCliente.IPaddress,UpperCase(DMCliente.HostName)) +' - ['+IntToStr(DMCliente.ClientSocket.Port)+']';

end;

end.
