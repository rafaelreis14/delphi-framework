unit UI.Sistema.Principal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils,
  System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ToolWin, Vcl.ActnMan,
  Vcl.ActnCtrls, Vcl.ActnMenus, Vcl.ActnList, Vcl.PlatformDefaultStyleActnCtrls,
  Vcl.ComCtrls, Vcl.StdCtrls, Vcl.Buttons, DB, System.StrUtils,
  ClsLib, Vcl.Imaging.pngimage, Vcl.ExtCtrls,
  UntErrorProvider,UntFormBase, Vcl.Grids, Vcl.DBGrids, MIDASLIB,
  ClsProduto, UntDistribuicao, UntConferenciaEntradaSaida, Framework.UI.FormBase;

type
  TFrmPrincipal = class(TFrmBase)
    pnlBotoes: TPanel;
    btnEnviar: TBitBtn;
    cpgMenus: TCategoryPanelGroup;
    cpConsulta: TCategoryPanel;
    cpProcesso: TCategoryPanel;
    cpCadastro: TCategoryPanel;
    procedure btnEnviarClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure ActnRotinaExecute(Sender: TObject);
    procedure cpCadastroExpand(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    ultimoLeft: integer;
    ultimoTop: integer;
    vColuna: integer;
    vTopAtual : integer;
    vLeftAtual : integer;
    vLinha: Integer;
    ultimaCategoria: string;

    const espaco: integer = 4;

    //ordemBotao: integer;

    procedure PreparaMenu;
    procedure CriarBotao(dataSet:TDataSet);
  protected

    { Private declarations }
  public
    mobile:boolean;

  published
    procedure MenuErro;

    {$REGION 'Módulo Logistica'}
        {$REGION 'Cadastro'}

        {$ENDREGION}

        {$REGION 'Processo'}

        {$ENDREGION}
        procedure Inventario;
        procedure ConferenciaEntrada;
        procedure MontaTransferencia;
        procedure ConferenciaRomaneio;
        procedure Distribuicao;
        {$REGION 'Utilitários'}

        {$ENDREGION}

        {$REGION 'Relatórios'}

        {$ENDREGION}

        {$REGION 'Ajuda'}

        {$ENDREGION}
    {$ENDREGION}


  end;

var
  FrmPrincipal: TFrmPrincipal;

implementation

{$R *.dfm}

uses UntInventario;


procedure TFrmPrincipal.CriarBotao(dataSet:TDataSet);
var
    btn: TBitBtn;
    event: TNotifyEvent;
begin

    if ultimaCategoria <> UpperCase(dataSet.FieldByName('S05_CATEGORIA').AsString)  then
    begin
        vColuna := 0;
        vTopAtual := espaco;
        vLeftAtual := espaco;
    end;

    btn := TBitBtn.Create(self);
    btn.Left := vLeftAtual;
    btn.Top := vTopAtual;
    btn.Width := 70;
    btn.Height := 41;
    btn.Action := action;
    btn.WordWrap := True;
    btn.Caption := dataSet.FieldByName('S05_DESC').AsString;

    case AnsiIndexStr(UpperCase(dataSet.FieldByName('S05_CATEGORIA').AsString), ['CADASTRO', 'PROCESSO','COSULTA']) of
        0: cpCadastro.InsertControl(btn);
        1: cpProcesso.InsertControl(btn);
        2: cpConsulta.InsertControl(btn);
    end;

    TMethod(event).Code := MethodAddress(trim(dataSet.FieldByName('S05_ACT_MENU').AsString));
    TMethod(event).Data := self;

    if  Assigned(TMethod(event).Code) then
        btn.OnClick := event
    else
    begin
        TMethod(event).Code := MethodAddress('MenuErro');
        TMethod(event).Data := self;
        btn.OnClick := event;
    end;

    Inc(vColuna);

    if vColuna = 3 then
    begin
        vTopAtual := vTopAtual + btn.Height + espaco;
        vLeftAtual := espaco;
        vColuna := 0;
    end
    else
    begin
        vLeftAtual := vLeftAtual + btn.Width + espaco;
    end;
    ultimaCategoria := UpperCase(dataSet.FieldByName('S05_CATEGORIA').AsString);
end;

procedure TFrmPrincipal.Distribuicao;
begin
    Tlib.AbrirFormulario(TfrmDistribuicao);
end;

procedure TFrmPrincipal.ActnRotinaExecute(Sender: TObject);
begin
  inherited;
    ShowMessage('Rotina');
end;


procedure TFrmPrincipal.btnEnviarClick(Sender: TObject);
begin
    inherited;
    Self.Close;
end;

procedure TFrmPrincipal.ConferenciaEntrada;
var
    tipoConferencia: TTipoConferencia;
begin
    tipoConferencia := tcConferenciaEntrada;
    Tlib.AbrirFormulario(TfrmConferenciaEntradaSaida,TObject(tipoConferencia));
end;

procedure TFrmPrincipal.ConferenciaRomaneio;
var
    tipoConferencia: TTipoConferencia;
begin
    tipoConferencia := tcConferenciaSaidaRomaneio;
    Tlib.AbrirFormulario(TfrmConferenciaEntradaSaida,TObject(tipoConferencia));

end;

procedure TFrmPrincipal.MontaTransferencia;
var
    tipoConferencia: TTipoConferencia;
begin
    tipoConferencia := tcConferenciaSaidaTransferencia;
    Tlib.AbrirFormulario(TfrmConferenciaEntradaSaida,TObject(tipoConferencia));
end;

procedure TFrmPrincipal.cpCadastroExpand(Sender: TObject);
begin
  inherited;
  cpCadastro.Collapsed := not (TCategoryPanel(sender) = cpCadastro);
  cpProcesso.Collapsed := not (TCategoryPanel(sender) = cpProcesso);
  cpConsulta.Collapsed := not (TCategoryPanel(sender) = cpConsulta);
end;

procedure TFrmPrincipal.FormCreate(Sender: TObject);
begin
  inherited;
  Application.OnException := Tlib.TrataErro;
  Tlib.mobile := true;
  mobile := true;
end;

procedure TFrmPrincipal.FormShow(Sender: TObject);
begin
    inherited;
    self.Width := MobileWidth;
    self.Height := MobileHeight;
    PreparaMenu;
end;



procedure TFrmPrincipal.Inventario;
begin
   Tlib.AbrirFormulario(TfrmInventario);
end;

procedure TFrmPrincipal.MenuErro;
begin
  Tlib.MensagemInformacao('Ação do Menu cadastrada de forma errada.','');
end;

procedure TFrmPrincipal.PreparaMenu();
var
    vParametro: Parametro;
    vComponent: TComponent;
    iCont: integer;
    DataSource: TDataSource;
begin
    try
        inherited;
        DataSource := TDataSource.Create(Application);
        vParametro := Parametro.Create;
        vParametro.Add('', 'S09_S08_MODULO', TLib.UsuarioLogado.ModuloLogado.Modulo);
        vParametro.Add('', 'S03_S01_LOGIN', TLib.UsuarioLogado.Login);
        vParametro.Add('', 'S05_TIPOROTINA', 'MOBILE');
        DataSource.DataSet := BaseLib.XmlToDataset(BaseLib.ExecutaTarefa('MontaMenu', Self.Name, vParametro));

        DataSource.DataSet.First;
        while not(DataSource.DataSet.Eof) do
        begin
            CriarBotao(DataSource.DataSet);

            DataSource.DataSet.Next;
        end;
    finally
        FreeAndNil(DataSource);
        FreeAndNil(vParametro);
    end;
end;

end.

